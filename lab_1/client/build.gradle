plugins {
    id 'java'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.8.17'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
    id 'eclipse'
}

group 'hr.fer.rassus'
version '1'


repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/"
    }
    mavenCentral()
    mavenLocal()
}


dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    //################ GRPC ################
    implementation 'io.grpc:grpc-netty-shaded:1.41.0'
    implementation 'io.grpc:grpc-protobuf:1.41.0'
    implementation 'io.grpc:grpc-stub:1.41.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+
    //################ GRPC ################

    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.3'
    implementation "org.glassfish:javax.json:1.1.4"
    implementation group: 'org.json', name: 'json', version: '20220924'




    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:3.4.0"

}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
    	// Remember to refresh gradle project in Eclipse (F5) 
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

//################ GRPC ################
// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.17.3"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.41.0'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
    all().each {
      it.group = 'build'
    }
  }
}
//################ GRPC ################
task runClient(type: JavaExec) {
    group = "exec"
    description = "Run client with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "hr.fer.tel.rassus.radja.sensor.GRPCClient"
    standardInput = System.in

}

task runServer(type: JavaExec) {
    group = "exec"
    description = "Run client with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "hr.fer.tel.rassus.radja.sensor.GRPCServer"
}